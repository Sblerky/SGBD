/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gpagency.sgbd;

import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author Jules
 */
public class Vue extends javax.swing.JFrame {

    /**
     * Creates new form Vue
     */
    public Vue() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Labelt1 = new javax.swing.JLabel();
        CBt1 = new javax.swing.JComboBox<>();
        Checkt1 = new javax.swing.JCheckBox();
        Labelt2 = new javax.swing.JLabel();
        CBt2 = new javax.swing.JComboBox<>();
        Checkt2 = new javax.swing.JCheckBox();
        LabelJoin = new javax.swing.JLabel();
        CBJoin = new javax.swing.JComboBox<>();
        BtLaunch = new javax.swing.JButton();
        Scrollt1 = new javax.swing.JScrollPane();
        Textt1 = new javax.swing.JTextArea();
        Scrollt2 = new javax.swing.JScrollPane();
        Textt2 = new javax.swing.JTextArea();
        ScrollRes = new javax.swing.JScrollPane();
        TextRes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 4));

        jPanel2.setLayout(new java.awt.GridLayout(9, 0));

        Labelt1.setText("Relation 1");
        jPanel2.add(Labelt1);

        CBt1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Table", "Index" }));
        jPanel2.add(CBt1);

        Checkt1.setText("Tri ?");
        Checkt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Checkt1ActionPerformed(evt);
            }
        });
        jPanel2.add(Checkt1);

        Labelt2.setText("Relation 2");
        jPanel2.add(Labelt2);

        CBt2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Table", "Index" }));
        jPanel2.add(CBt2);

        Checkt2.setText("Tri ?");
        jPanel2.add(Checkt2);

        LabelJoin.setText("Type de jointure");
        jPanel2.add(LabelJoin);

        CBJoin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Key Lookup", "Sort Merge", "Produit Cartésien", "Hachage", "Omiecinski" }));
        jPanel2.add(CBJoin);

        BtLaunch.setText("Fuuuuusion");
        BtLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtLaunchActionPerformed(evt);
            }
        });
        jPanel2.add(BtLaunch);

        jPanel1.add(jPanel2);

        Textt1.setColumns(20);
        Textt1.setRows(5);
        Scrollt1.setViewportView(Textt1);

        jPanel1.add(Scrollt1);

        Textt2.setColumns(20);
        Textt2.setRows(5);
        Scrollt2.setViewportView(Textt2);

        jPanel1.add(Scrollt2);

        TextRes.setColumns(20);
        TextRes.setRows(5);
        ScrollRes.setViewportView(TextRes);

        jPanel1.add(ScrollRes);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Checkt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Checkt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Checkt1ActionPerformed

    private void BtLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtLaunchActionPerformed
        // TODO add your handling code here:
        Table t1;
        Index i1;
        Table t2;
        Index i2;
        Segment s1 = null, s2=null;
        Buffer buf = new Buffer();
        ArrayList<Resultat> res = new ArrayList<Resultat>();
        String str1="";
        String str2="";
        String str3="";
        int i=0;
                
        switch(CBt1.getSelectedIndex()){
            case 0 : {
                t1 = new Table();
                if(Checkt1.isSelected()){
                    Collections.sort(t1.getListe());
                }
                s1 = new Segment(t1);
                break;
            }
            case 1 : {
                Table temp1 = new Table();
                i1 = new Index(temp1);
                if(Checkt1.isSelected()){
                    Collections.sort(i1.getListe());
                }
                s1 = new Segment(i1);
                break;
            }
            
        }
        
        
        switch(CBt2.getSelectedIndex()){
            case 0 : {
                t2 = new Table();
                if(Checkt2.isSelected()){
                    Collections.sort(t2.getListe());
                }
                s2 = new Segment(t2);
                break;
            }
            case 1 : {
                Table temp2 = new Table();
                i2 = new Index(temp2);
                if(Checkt2.isSelected()){
                    Collections.sort(i2.getListe());
                }
                s2 = new Segment(i2);
                break;
            }
            
        }
        for(i=0; i<s1.getListe().size()*s1.getBloc(0).getListe().size(); i++){
            Enregistrement enr1 = s1.getBloc(i/10).getEnr(i%10);
            str1+=enr1.toString();
            str1+="\n\n";    
        }
        
        Textt1.setText(str1);
        
        for(i=0; i<s2.getListe().size()*s2.getBloc(0).getListe().size(); i++){
            Enregistrement enr2 = s2.getBloc(i/10).getEnr(i%10);
            str2+=enr2.toString();
            str2+="\n\n";    
        }
        
        Textt2.setText(str2);
        
        switch(CBJoin.getSelectedIndex()){
            case 0 : {//key_lookup
                Jointures.keyLookup(s1, s2, buf, res);
                for(i=0; i<res.size(); i++){
                    str3+=res.get(i).getE1().toString();
                    str3+="\n";
                    str3+=res.get(i).getE2().toString();
                    str3+="\n\n";
                }
                str3+=buf.getListe().size();
                str3+=" Blocs lus";
                TextRes.setText(str3);
                break;
            }
            case 1 : {//sort merge
                if(Checkt2.isSelected() && Checkt1.isSelected()){
                    Jointures.sortMerge(s1, s2, buf, res);
                    for(i=0; i<res.size(); i++){
                        str3+=res.get(i).getE1().toString();
                        str3+="\n";
                        str3+=res.get(i).getE2().toString();
                        str3+="\n\n";
                    }
                    str3+=buf.getListe().size();
                    str3+=" Blocs lus";
                    TextRes.setText(str3);  
                }
                else{
                    TextRes.setText("Relations non triées");  
                }
                
                break;
            }
            case 2 : {//produit cartésien
                Jointures.cartesian(s1, s2, buf, res);
                for(i=0; i<res.size(); i++){
                    str3+=res.get(i).getE1().toString();
                    str3+="\n";
                    str3+=res.get(i).getE2().toString();
                    str3+="\n\n";
                }
                str3+=buf.getListe().size();
                str3+=" Blocs lus";
                TextRes.setText(str3);
                break;
            }
            case 3 : {//hachage
                Jointures.hash(s1, s2, buf, res);
                for(i=0; i<res.size(); i++){
                    str3+=res.get(i).getE1().toString();
                    str3+="\n";
                    str3+=res.get(i).getE2().toString();
                    str3+="\n\n";
                }
                str3+=buf.getListe().size();
                str3+=" Blocs lus";
                TextRes.setText(str3);
                break;
            }
            case 4 : {//omiecinski
                if(Checkt2.isSelected() && Checkt1.isSelected()){
                    Jointures.omiecinski(s1, s2, buf, res);
                    for(i=0; i<res.size(); i++){
                        str3+=res.get(i).getE1().toString();
                        str3+="\n";
                        str3+=res.get(i).getE2().toString();
                        str3+="\n\n";
                    }
                    str3+=buf.getListe().size();
                    str3+=" Blocs lus";
                    TextRes.setText(str3);  
                }
                else{
                    TextRes.setText("Relations non triées");  
                }
                break;
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_BtLaunchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtLaunch;
    private javax.swing.JComboBox<String> CBJoin;
    private javax.swing.JComboBox<String> CBt1;
    private javax.swing.JComboBox<String> CBt2;
    private javax.swing.JCheckBox Checkt1;
    private javax.swing.JCheckBox Checkt2;
    private javax.swing.JLabel LabelJoin;
    private javax.swing.JLabel Labelt1;
    private javax.swing.JLabel Labelt2;
    private javax.swing.JScrollPane ScrollRes;
    private javax.swing.JScrollPane Scrollt1;
    private javax.swing.JScrollPane Scrollt2;
    private javax.swing.JTextArea TextRes;
    private javax.swing.JTextArea Textt1;
    private javax.swing.JTextArea Textt2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
